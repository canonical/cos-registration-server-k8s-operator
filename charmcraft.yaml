name: cos-registration-server-k8s
summary: The COS registration server as a k8s charm
description: |
  The COS registration server as a k8s charm
type: charm
assumes:
  - k8s-api
  - juju >= 3.4.3
bases:
  - build-on:
    - name: ubuntu
      channel: "22.04"
    run-on:
    - name: ubuntu
      channel: "22.04"

charm-libs:
  - lib: traefik_k8s.ingress
    version: "2"
  - lib: blackbox_exporter_k8s.blackbox_probes
    version: "0"
  - lib: grafana_k8s.grafana_dashboard
    version: "0"
  - lib: grafana_k8s.grafana_source
    version: "0"
  - lib: grafana_k8s.grafana_auth
    version: "0"
  - lib: loki_k8s.loki_push_api
    version: "1"
  - lib: prometheus_k8s.prometheus_remote_write
    version: "1"
  - lib: tempo_coordinator_k8s.charm_tracing
    version: "0"
  - lib: tempo_coordinator_k8s.tracing
    version: "0"

containers:
  cos-registration-server:
    resource: cos-registration-server-image
    mounts:
      - storage: database
        location: /server_data

resources:
  cos-registration-server-image:
    type: oci-image
    description: ubuntu 22 base image
    upstream-source: ghcr.io/canonical/cos-registration-server:dev

storage:
  database:
    type: filesystem

requires:
  ingress:
    interface: ingress
    limit: 1
  catalogue:
    interface: catalogue
  logging:
   interface: loki_push_api
   optional: true
  logging-alerts-devices:
    interface: loki_push_api
  send-remote-write-alerts-devices:
    interface: prometheus_remote_write
  tracing:
    interface: tracing
    limit: 1
    optional: true
    description: |
      Integration to send charm traces to a tracing backend.

provides:
  grafana-dashboard:
    interface: grafana_dashboard
  grafana-dashboard-devices:
    interface: grafana_dashboard
  auth-devices-keys:
    interface: auth_devices_keys
  probes:
    interface: blackbox_exporter_probes
    description: |
      Send over to blackbox exporter the app endpoints we want it to probe.
  probes-devices:
    interface: blackbox_exporter_probes
    description: |
      Send over to blackbox exporter the device endpoints we want it to probe.

actions:
  get-admin-password:
    description: Get the admin password for the django admin view.

parts:
  charm:
    build-snaps: [rustup]
    override-build: |
      rustup default stable
      craftctl default
  cos-tool:
    plugin: dump
    source: .
    build-packages:
      - curl
    override-pull: |
      curl -L -O https://github.com/canonical/cos-tool/releases/latest/download/cos-tool-${CRAFT_ARCH_BUILD_FOR}
      chmod 775 cos-tool-*
